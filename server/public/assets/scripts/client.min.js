var myApp=angular.module("myApp",["ngRoute","ngAnimate","ui.bootstrap","smart-table"]);myApp.config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"assets/views/templates/home.html",controller:"HomeController"}).when("/querys",{templateUrl:"assets/views/routes/querys.html",controller:"queryController"}).otherwise({redirectTo:"/"}),b.html5Mode(!0)}]),myApp.controller("AddUserController",["$scope","UserService",function(a,b){console.log("AddUserController Works!");var c=b;a.addUser={},a.submit=function(a){console.log("@mainController.js AddUserController data (AKA: addUser: ",a),c.newUser(a)}}]),myApp.controller("AddGoalsController",["$scope","GoalService",function(a,b){console.log("HI, @CONTROLLER - AddGoalsController Works!");var c=b;a.months=["september","october","november","december","january","february","march","april","may","june","july","august"],a.addGoals={},a.saveGoals=function(a){console.log("@goalController.js data (AKA: addGoals: ",a),c.newGoals(a)}}]),myApp.controller("HomeController",["$scope","$filter","MockService",function(a,b,c){var d=c;a.rowCollection=[],a.itemsByPage=15,a.accounts=[],a.donations=[],a.campaigns=[],a.contacts=[],a.households=[],a.contacts=d.contacts,d.getContacts()}]),myApp.controller("MainController",["$scope","UserService",function(a,b){}]),myApp.controller("QueryController",["$scope","QueryService",function(a,b){console.log("QueryControllerWorks"),a.data=[],a.forceData=[],a.forceresponse=[];b.getSalesforce(),a.data=b.data,a.forceData=b.forceData,console.log("forcedata",b.forceData),console.log("forcedata arrResults",b.forceData.arrResults),a.forceresponse=b.forceresponse}]),myApp.controller("UserController",["$scope","$http","$window",function(a,b,c){a.userName="",b.get("/user").then(function(b){b.data?(a.userName=b.data.username,console.log("User Data: ",a.userName)):c.location.href="/index.html"})}]),myApp.factory("GoalService",["$http",function(a){var b=function(a){console.log("*@FACTORY goalService, newGoals(addGoals): ",a)};return{newGoals:b}}]),myApp.factory("MockService",["$http",function(a){var b={},c={},d={},e={},f={},g=function(){return a.get("mockData/accounts").then(function(a){b.object=a.data,console.log("accounts in factory get",b.object)})},h=function(){return a.get("mockData/contacts").then(function(a){d.object=a.data,console.log("contacts in factory get",d.object)})},i=function(){return a.get("mockData/campaigns").then(function(a){c.object=a.data,console.log("campaigns in factory get",c.object)})},j=function(){return a.get("mockData/donations").then(function(a){e.object=a.data,console.log("donations in factory get ",e.object)})},k=function(){return a.get("mockData/households").then(function(a){f.object=a.data,console.log("households in factory get",f.object)})};return{getAccounts:g,getCampaigns:i,getContacts:h,getDonations:j,getHouseholds:k,accounts:b,contacts:d,donations:e,campaigns:c,households:f}}]),myApp.factory("QueryService",["$http",function(a){var b={},c={},d={},e=[],f=[],g=0,h="",i=new Date("12-31-2015"),j=new Date,k=new Date,l=new Date,m=new Date,n=new Date,o=new Date,p=new Date,q=new Date,r=new Date,s=new Date;k=new Date(i),j=new Date("09/01/"+i.getFullYear()),j>k&&(j=new Date("09/01/"+(i.getFullYear()-1))),l=new Date(j),l.add({years:-1}),n=new Date(j),n.add({years:-2}),m=new Date(k),m.add({years:-1}),o=new Date(k),o.add({years:-2}),q=new Date("08/31/"+i.getFullYear()),q>i&&(q=new Date("08/31/"+(i.getFullYear()-1))),s=new Date(q),s.add({years:-1}),p=new Date(l),r=new Date(n),i=i.toFormat("YYYY-MM-DD"),j=j.toFormat("YYYY-MM-DD"),k=k.toFormat("YYYY-MM-DD"),l=l.toFormat("YYYY-MM-DD"),m=m.toFormat("YYYY-MM-DD"),n=n.toFormat("YYYY-MM-DD"),o=o.toFormat("YYYY-MM-DD"),p=p.toFormat("YYYY-MM-DD"),q=q.toFormat("YYYY-MM-DD"),r=r.toFormat("YYYY-MM-DD"),s=s.toFormat("YYYY-MM-DD"),console.log("selEndDate",i),console.log("ytdStart",j),console.log("ytdEnd",k),console.log("ytdM1Start",l),console.log("ytdM1End",m),console.log("ytdM2Start",n),console.log("ytdM2End",o),console.log("fyM1Start",p),console.log("fyM1End",q),console.log("fyM2Start",r),console.log("fyM2End",s),h="SELECT Donation_SubCategory__c, SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+j+" AND CloseDate <="+k+"  GROUP BY Donation_SubCategory__c ",sqlObj={query:"money raised YTD START AND END RATE this is NEW SPARTA",sql:h},f.push(sqlObj),h="SELECT Donation_SubCategory__c, SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+l+" AND CloseDate <="+m+"  GROUP BY Donation_SubCategory__c ",sqlObj={query:"year -1 money raised YTD START AND END RATE this is NEW SPARTA",sql:h},f.push(sqlObj),h="SELECT Donation_SubCategory__c, SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+n+" AND CloseDate <="+o+"  GROUP BY Donation_SubCategory__c ",sqlObj={query:"year -2 money raised YTD START AND END RATE this is NEW SPARTA",sql:h},f.push(sqlObj),h="SELECT Donation_SubCategory__c, SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+p+" AND CloseDate <="+q+"  GROUP BY Donation_SubCategory__c ",sqlObj={query:"First Fiscal YEar before select date",sql:h},f.push(sqlObj),h="SELECT Donation_SubCategory__c, SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+r+" AND CloseDate <="+s+"  GROUP BY Donation_SubCategory__c ",sqlObj={query:"SECOND Fiscal YEar before select date",sql:h},f.push(sqlObj),h="SELECT  SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+j+" AND CloseDate <="+k,sqlObj={query:"TOTAL amount for ytd selected",sql:h},f.push(sqlObj),h="SELECT  SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+l+" AND CloseDate <="+m,sqlObj={query:"TOTAL amount for ytd selected -1",sql:h},f.push(sqlObj),h="SELECT  SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+n+" AND CloseDate <="+o,sqlObj={query:"TOTAL amount for ytd selected -2",sql:h},f.push(sqlObj),h="SELECT  SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+p+" AND CloseDate <="+q,sqlObj={query:"TOTAL amount for First full fiscal year before selected",sql:h},f.push(sqlObj),h="SELECT  SUM(Amount) FROM  Opportunity WHERE StageName = 'Posted' AND Amount != null AND CloseDate >= "+r+" AND CloseDate <="+s,sqlObj={query:"TOTAL amount for Second full fiscal year before selected",sql:h},f.push(sqlObj),h="SELECT  COUNT(Id) FROM Opportunity WHERE StageName = 'Posted' AND RecordTypeID = '012800000002KPtAAM' GROUP BY AccountId HAVING MIN(CloseDate) >= "+j+" AND MIN(CloseDate) <= "+k,sqlObj={query:"first time donors  YTD SELECTED",sql:h},f.push(sqlObj),h="SELECT  COUNT(Id) FROM Opportunity WHERE StageName = 'Posted' AND RecordTypeID = '012800000002KPtAAM' GROUP BY AccountId HAVING MIN(CloseDate) >= "+l+" AND MIN(CloseDate) <= "+m,sqlObj={query:"first time donors  YTD SELECTED -1",sql:h},f.push(sqlObj),h="SELECT  COUNT(Id) FROM Opportunity WHERE StageName = 'Posted' AND RecordTypeID = '012800000002KPtAAM' GROUP BY AccountId HAVING MIN(CloseDate) >= "+n+" AND MIN(CloseDate) <= "+o,sqlObj={query:"first time donors  YTD SELECTED -2",sql:h},f.push(sqlObj),h="SELECT  COUNT(Id) FROM Opportunity WHERE StageName = 'Posted' AND RecordTypeID = '012800000002KPtAAM' GROUP BY AccountId HAVING MIN(CloseDate) >= "+p+" AND MIN(CloseDate) <= "+q,sqlObj={query:"first time donors  First FY before selected",sql:h},f.push(sqlObj),h="SELECT  COUNT(Id) FROM Opportunity WHERE StageName = 'Posted' AND RecordTypeID = '012800000002KPtAAM' GROUP BY AccountId HAVING MIN(CloseDate) >= "+r+" AND MIN(CloseDate) <= "+s,sqlObj={query:"first time donors  Second FY before selected",sql:h},f.push(sqlObj),h="SELECT  COUNT(Id), SUM(AMount) FROM Opportunity WHERE (CloseDate > 2014-09-01 AND CloseDate < 2015-08-31) GROUP BY AccountId HAVING ( SUM(Amount) < 95)  ",sqlObj={query:"base donors current year",sql:h},f.push(sqlObj);var t=function(b){c.accessToken?(console.log("DID NOT reauthroize"),u()):(console.log("I want to do a check in getSalesforce to see if I need to auth. ",c.accessToken),a.get("/salesforce/force").then(function(a){c.response=a.data,c.accessToken=a.data.accessToken,c.instanceUrl=a.data.instanceUrl,u()}))},u=function(b){return console.log("in fetch force, forceResult=",b),b&&(e.push(b.data),g=e.length,console.log("sql index",g),e.length==f.length)?(console.log("Hey! In fetchForce in queryService, I think we are done!"),d.arrResults=e,void v()):(console.log("getting ready to get in fetch. sqlIndex=",g,"arrSql[sqlIndex]=",f[g].sql),void a.get("/salesforce/fetch",{params:{accessToken:c.accessToken,instanceUrl:c.instanceUrl,strSql:f[g].sql,queryInfo:f[g].query}}).then(function(a){u(a)}))},v=function(){for(var a=0;a<e.length;a++)console.log("ViewData! arrResults=",e[a])};return{getSalesforce:t,data:b,forceData:d,forceresponse:c,arrResults:e,fetchForce:u}}]),myApp.factory("UserService",["$http",function(a){var b={},c=function(){return a.get("/getnames").then(function(a){return b.response=a.data,a.data})},d=function(b){return console.log(b),a.post("/postnames",b).then(function(a){return c()})},e=function(a){console.log("-@FACTORY userServcie.js newUser(data) = ",a)};return{getNames:c,postNames:d,newUser:e,data:b}}]);